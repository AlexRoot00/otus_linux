# -*- mode: ruby -*-
# vim: set ft=ruby :
home = ENV['HOME']
ENV["LC_ALL"] = "en_US.UTF-8"

MACHINES = {
  :borgserver => {
    :box_name => "centos/8",
    :box_version => "2011.0",
    :ip_addr => '192.168.1.10',
    :disks => {
      :sata1 => {
      :dfile => home + '/VirtualBox VMs/sata21.vdi',
      :size => 4096,
      :port => 1
      },
      :sata2 => {
        :dfile => home + '/VirtualBox VMs/sata31.vdi',
        :size => 4096, # Megabytes
        :port => 2
        }
      }
    },
  :borgclient => {
    :box_name => "centos/8",
    :box_version => "2011.0",
    :ip_addr => '192.168.1.20',
      :disks => {
        :sata1 => {
        :dfile => home + '/VirtualBox VMs/sata11.vdi',
        :size => 1024,
        :port => 1
        }
      }
  }
}

Vagrant.configure("2") do |config|
    config.vm.box_version = "2011.0"
    MACHINES.each do |boxname, boxconfig|
      config.vm.define boxname do |box|
        box.vm.box = boxconfig[:box_name]
        box.vm.host_name = boxname.to_s
        box.vm.network "private_network", ip: boxconfig[:ip_addr]
        box.vm.provider :virtualbox do |vb|
          vb.customize ["modifyvm", :id, "--memory", "256"]
          needsController = false
          boxconfig[:disks].each do |dname, dconf|
            unless File.exist?(dconf[:dfile])
            vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
            needsController =  true
            end
            end
            if needsController == true
              vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
              boxconfig[:disks].each do |dname, dconf|
              vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
              end
        end
    end
    #mkdir /var/backup && mkfs.ext4 /dev/sdc && mount /var/backup /dev/sdc
    box.vm.provision "shell", inline: <<-SHELL
    mkdir -p ~root/.ssh
    cp ~vagrant/.ssh/auth* ~root/.ssh
    SHELL
    box.vm.provision "ansible" do |ansible|
    #ansible.verbose = "vvv"
    ansible.playbook = "provisioning/playbook.yml"
    ansible.become = "true"
    end
    end
  end
end