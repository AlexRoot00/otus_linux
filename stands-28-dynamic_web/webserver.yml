---
- name: Install and configure
  hosts: web
  become: yes 
  tasks:
    - name: Add epel-release repo
      dnf:
        name: epel-release
        state: present
        
    - name: disable ssl for repo epel
      lineinfile: 
        dest: /etc/yum.repos.d/epel.repo
        insertafter: 'enabled=1' 
        line: 'sslverify=0'
    - name: install nodejs
      shell: dnf module enable nodejs:12 -y
    - name: Install a list of packages
      dnf:
        name:
          - nginx
          - python3-devel
          - python3-pip
          - python3-virtualenv
          - git
          - nodejs
          - npm
          - net-tools
          - golang-*
          - make

        state: present
    - name: fask install
      shell: pip3 install flask
    - name: mkdir web&&websrv
      shell: mkdir /opt/static && mkdir /opt/websrv     
    
    - name: Put SELinux in permissive mode, logging actions that would be blocked.
      selinux:
        policy: targeted
        state: permissive    
    - git_config:
        name: http.sslVerify
        scope: global
        value: 'false'  


    - name: copy custom webservces
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: '0777'
      with_items:
        - { src: 'files/goweb/websrv.go', dest: '/opt/websrv' }
        - { src: 'files/goweb/webservice.js', dest: '/opt/static' }
        - { src: 'files/goweb/websrv.py', dest: '/opt/websrv' }
        - { src: 'files/goweb/go.mod', dest: '/opt/websrv' }
        - { src: 'files/goweb/go.sum', dest: '/opt/websrv' }
        - { src: 'files/goweb/Makefile', dest: '/opt/websrv' }
    - name: setup npm
      shell: |
        cd /opt/static/
        echo "" | npm init
        npm config set strict-ssl false
        npm install request express vue yarn axios --save 
        exit 0
      args:
        executable: /bin/bash
    - name: make gowebsrv
      shell: cd /opt/websrv && make
    
    - name: copy custom webservces.service
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: '0777'
      with_items:
        - { src: 'files/service/flask.service', dest: '/etc/systemd/system/' }
        - { src: 'files/service/go.service', dest: '/etc/systemd/system/' }
        - { src: 'files/service/nodejs_starter.service', dest: '/etc/systemd/system/' }
    - name: copy config
      copy: 
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: '0777'
      with_items:
        - { src: 'files/config/nginx.conf', dest: '/etc/nginx/' }
      notify:
      - restart all services
    - name: daemon started
      systemd:
        name: go
        state: started
        enabled: yes
     
    - name: daemon started
      systemd:
        name: nginx
        state: started
        enabled: yes
    - name: daemon started
      systemd:
        name: flask
        state: started
        enabled: yes
    - name: daemon started
      shell: systemctl enable --now nodejs_starter   
    - name: status daemons 
      shell : systemctl status "{{ item }}"
      with_items:
        - flask
        - go
        - nginx
        - nodejs_starter
  handlers:
  - name: restart all services
    service:
      name: "{{ item }}"
      state: restarted
    with_items:
      - flask
      - go
      - nginx
      - nodejs_starter