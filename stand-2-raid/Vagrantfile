# -*- mode: ruby -*-
# vim: set ft=ruby :
#ssh.insert_key = false
home = ENV['HOME']
ENV["LC_ALL"] = "en_US.UTF-8"
MACHINES = {
  :raid => {
        :box_name => "centos/8",
        :box_version => "1905.1",
        :ip_addr => '192.168.11.105',
    :disks => {
        :sata1 => {
            :dfile =>home+'/VirtualBox VMs/sata21.vdi',
            :size => 10256,
            :port => 1
        },
        :sata2 => {
            :dfile =>home+'/VirtualBox VMs/sata22.vdi',
            :size => 10256, # Megabytes
            :port => 2
        },
        :sata3 => {
            :dfile =>home+'/VirtualBox VMs/sata23.vdi',
            :size => 10256, # Megabytes
            :port => 3
        },
        :sata4 => {
            :dfile =>home+'/VirtualBox VMs/sata24.vdi',
            :size => 10256,
            :port => 4
        },
        :sata5 => {
            :dfile =>home+'/VirtualBox VMs/sata25.vdi',
            :size => 10256,
            :port => 5
        },
        :sata6 => {
            :dfile =>home+'/VirtualBox VMs/sata26.vdi',
            :size => 10256,
            :port => 6
        }
    }
  },
}

Vagrant.configure("2") do |config|
        config.vm.box_version = "1905.1"

  MACHINES.each do |boxname, boxconfig|
        
      config.vm.define boxname do |box|

          box.vm.box = boxconfig[:box_name]
          box.vm.host_name = boxname.to_s

          #box.vm.network "forwarded_port", guest: 3260, host: 3260+offset

          box.vm.network "private_network", ip: boxconfig[:ip_addr]

          box.vm.provider :virtualbox do |vb|
                vb.customize ["modifyvm", :id, "--memory", "256"]
                needsController = false
        boxconfig[:disks].each do |dname, dconf|
            unless File.exist?(dconf[:dfile])
              vb.customize ['createhd', '--filename', dconf[:dfile], '--variant', 'Fixed', '--size', dconf[:size]]
                              needsController =  true
                        end

        end
                if needsController == true
                   vb.customize ["storagectl", :id, "--name", "SATA", "--add", "sata" ]
                   boxconfig[:disks].each do |dname, dconf|
                       vb.customize ['storageattach', :id,  '--storagectl', 'SATA', '--port', dconf[:port], '--device', 0, '--type', 'hdd', '--medium', dconf[:dfile]]
                   end
                end
        end

 	  box.vm.provision "shell", inline: <<-SHELL
	      mkdir -p ~root/.ssh
              cp ~vagrant/.ssh/auth
              * ~root/.ssh
              
               yum install -y epel-release mdadm  smartmontools  elfutils-libelf-devel hdparm gdisk ;
               mdadm --zero-superblock /dev/sdb /dev/sdc /dev/sdd /dev/sde /dev/sdf /dev/sdg;
               mdadm --create --verbose /dev/md/raid1 --level=1 --raid-devices=4 /dev/sdb /dev/sdc /dev/sdd /dev/sde ;
               parted /dev/md127 -s mklablel gpt ; mkfs.xfs /dev/md127 ;

               


               
#&& zcat /proc/config.gz > ./.config  
#попытаться удалить ядро в системе для освобождения для нового sudo rm -rf /lib/modules/4.18.0-80.el8.x86_64/
SHELL

      end
  end
end